name: Docker

on:
  push:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Create Unity_lic.ulf
        run: echo "$UNITY_2021_ULF" > Unity_lic.ulf
        env:
          UNITY_2021_ULF: ${{ secrets.UNITY_2021_ULF }}
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: quay.io/decentraland/asset-bundle-converter:next
          build-args: |
            COMMIT_HASH=${{ github.sha }}
          secret-files: |
            ULF=./Unity_lic.ulf


    # - name: "Build, tag, and push image to Amazon ECR"
    #   uses: docker/build-push-action@v2
    #   env:
    #     REPOSITORY_NAME: ${{ github.event.repository.name }}
    #     AWS_ECR_REGISTRY: ${{ inputs.aws-account-id }}.dkr.ecr.eu-central-1.amazonaws.com
    #   with:
    #     context: ${{ inputs.docker-path-context }}
    #     file: ${{ inputs.docker-file }}
    #     push: true
    #     build-args: |
    #       PYTHON_PACKAGE=${{ env.REPOSITORY_NAME }}==${{ inputs.docker-image-version-tag }}
    #     tags: |
    #       ${{ env.AWS_ECR_REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ inputs.docker-image-version-tag }}
    #       ${{ env.AWS_ECR_REGISTRY }}/${{ env.REPOSITORY_NAME }}:latest
    #     secret-files: |
    #       "PIP_CONFIG=./pip.conf"

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}